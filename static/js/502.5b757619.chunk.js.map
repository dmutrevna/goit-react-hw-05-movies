{"version":3,"file":"static/js/502.5b757619.chunk.js","mappings":"6PAEaA,E,QAAgBC,GAAAA,GAAH,6R,SC4C1B,EArCkB,WAChB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgBE,EAAAA,EAAAA,GAAQC,EAAAA,GAAmBH,GAApCI,GAAP,eAEA,OAAqB,IAAjBA,EAAMC,QACD,uBAAG,6CAIV,0BACE,SAACP,EAAD,UACGM,GACCA,EAAME,KAAI,SAAAC,GAAI,OACZ,2BACE,gBACEC,IACED,EAAKE,aAAL,0CACuCF,EAAKE,cAD5C,UAEOC,GAETC,IAAKJ,EAAKK,KACVC,MAAM,MACNC,OAAO,SAET,uBAAIP,EAAKK,QACT,yBAAG,cAAYL,EAAKQ,eAZbR,EAAKS,GADF,OAmBvB,C,mMCtCKC,EAAU,mCACVC,EAAQ,+BAEDC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CACjEG,OAAQ,CACNC,QAASL,KAHoB,cAC3BM,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAsC,CAC3DG,OAAQ,CACNC,QAASL,EACTU,MAAOA,EACPC,eAAe,EACfC,KAAM,EACNC,SAAU,WAPiB,cACzBP,EADyB,yBAWxBA,EAASC,KAAKC,SAXU,2CAAH,sDAcjBtB,EAAiB,mCAAG,WAAMa,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,YAA6C,CAClEK,OAAQ,CACNC,QAASL,EACTa,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,KAAKjB,MAPU,2CAAH,sDAUjBwB,EAAiB,mCAAG,WAAMf,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,YAA6C,CAClEK,OAAQ,CACNC,QAASL,EACTa,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,sDAUjBO,EAAiB,mCAAG,WAAMhB,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,GAAM,CAC1DK,OAAQ,CACNC,QAASL,EACTa,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,qD,yFC7CjBtB,EAAU,SAAC+B,EAAOZ,GAC7B,OAAwBa,EAAAA,EAAAA,UAAS,IAAjC,eAAOV,EAAP,KAAaW,EAAb,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACRH,EAAMZ,GACHgB,MAAK,SAAAC,GAAG,OAAIH,EAAQG,EAAZ,IACRC,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,wBAAlB,GACV,GAAE,CAACP,EAAOZ,IACJ,CAACG,EAAMW,EACf,C","sources":["components/MovieCast/MovieCast.styled.jsx","components/MovieCast/MovieCast.jsx","service/Api.js","service/useHttp.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieCastList = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 10px);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  grid-gap: 25px;\n  margin-top: 25px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n`;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { fetchMovieCredits } from 'service/Api';\nimport { useHttp } from 'service/useHttp';\nimport noFoundImage from './../Image/image_not_found.jpg';\nimport { MovieCastList } from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const { movieId } = useParams();\n  const [casts] = useHttp(fetchMovieCredits, movieId);\n\n  if (casts.length === 0) {\n    return <p>We don`t have any casts for this movie.</p>;\n  }\n\n  return (\n    <div>\n      <MovieCastList>\n        {casts &&\n          casts.map(cast => (\n            <li key={cast.id}>\n              <img\n                src={\n                  cast.profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${cast.profile_path}`\n                    : `${noFoundImage}`\n                }\n                alt={cast.name}\n                width=\"150\"\n                height=\"225\"\n              />\n              <p>{cast.name}</p>\n              <p>Character: {cast.character}</p>\n            </li>\n          ))}\n      </MovieCastList>\n    </div>\n  );\n};\n\nMovieCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default MovieCast;\n","import axios from 'axios';\n\nconst API_KEY = '10f2241cb45b19eefbefaa60e9f9bf26';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      include_adult: false,\n      page: 1,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useHttp = (apiFn, params) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    apiFn(params)\n      .then(res => setData(res))\n      .catch(() => toast.error('Something went wrong!'));\n  }, [apiFn, params]);\n  return [data, setData];\n};\n"],"names":["MovieCastList","styled","movieId","useParams","useHttp","fetchMovieCredits","casts","length","map","cast","src","profile_path","noFoundImage","alt","name","width","height","character","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","api_key","response","data","results","fetchSearchMovies","query","include_adult","page","language","fetchMovieReviews","fetchMovieDetails","apiFn","useState","setData","useEffect","then","res","catch","toast"],"sourceRoot":""}