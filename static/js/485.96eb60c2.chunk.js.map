{"version":3,"file":"static/js/485.96eb60c2.chunk.js","mappings":"2OAEaA,EAAmBC,EAAAA,GAAAA,GAAH,sQAYhBC,EAAmBD,EAAAA,GAAAA,GAAH,0QAShBE,EAAkBF,EAAAA,GAAAA,IAAH,yPAWfG,EAAuBH,EAAAA,GAAAA,GAAH,iF,SCGjC,EA1BmB,SAAC,GAAgB,IAAdI,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,SAACP,EAAD,UACGK,EAAOG,KAAI,SAAAC,GAAK,OACf,UAACP,EAAD,YACE,SAACE,EAAD,UAAuBK,EAAMC,SAC7B,SAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMR,GAAhD,UACE,SAACH,EAAD,CACEY,IACEN,EAAMO,YAAN,0CACuCP,EAAMO,aAD7C,UAEOC,GAETC,IAAKT,EAAMC,YATMD,EAAMG,GADd,OAkBxB,C,qICjCYO,E,QAAoBlB,GAAAA,GAAH,wG,SCc9B,EAVa,WACX,OAAiBmB,EAAAA,EAAAA,GAAQC,EAAAA,IAAlBhB,GAAP,eACA,OACE,iCACE,SAACc,EAAD,UAAmB,oBACnB,SAACG,EAAA,EAAD,CAAYjB,OAAQA,MAGzB,C,mMCZKkB,EAAU,mCACVC,EAAQ,+BAEDH,EAAmB,mCAAG,oGACVI,EAAAA,EAAAA,IAAA,UAAaD,EAAb,uBAA4C,CACjEE,OAAQ,CACNC,QAASJ,KAHoB,cAC3BK,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAAaD,EAAb,iBAAsC,CAC3DE,OAAQ,CACNC,QAASJ,EACTS,MAAOA,EACPC,eAAe,EACfC,KAAM,EACNC,SAAU,WAPiB,cACzBP,EADyB,yBAWxBA,EAASC,KAAKC,SAXU,2CAAH,sDAcjBM,EAAiB,mCAAG,WAAMxB,GAAN,uFACRa,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BZ,EAA/B,YAA6C,CAClEc,OAAQ,CACNC,QAASJ,EACTY,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,KAAKQ,MAPU,2CAAH,sDAUjBC,EAAiB,mCAAG,WAAM1B,GAAN,uFACRa,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BZ,EAA/B,YAA6C,CAClEc,OAAQ,CACNC,QAASJ,EACTY,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,sDAUjBS,EAAiB,mCAAG,WAAM3B,GAAN,uFACRa,EAAAA,EAAAA,IAAA,UAAaD,EAAb,kBAA+BZ,GAAM,CAC1Dc,OAAQ,CACNC,QAASJ,EACTY,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,qD,yFC7CjBT,EAAU,SAACoB,EAAOd,GAC7B,OAAwBe,EAAAA,EAAAA,UAAS,IAAjC,eAAOZ,EAAP,KAAaa,EAAb,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACRH,EAAMd,GACHkB,MAAK,SAAAC,GAAG,OAAIH,EAAQG,EAAZ,IACRC,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,wBAAlB,GACV,GAAE,CAACP,EAAOd,IACJ,CAACG,EAAMa,EACf,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Home/Home.styled.jsx","pages/Home/Home.jsx","service/Api.js","service/useHttp.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 25px;\n  margin-top: 25px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MoviesItemStyled = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  margin-bottom: 10px;\n  text-align: center;\n  background-color: rgb(189, 243, 251);\n`;\n\nexport const MoviesImgStyled = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-bottom: 20px;\n  transition: transform 0.3s ease-in-out;\n  &:hover {\n    transform: translateY(-2px) scale(1.07);\n    filter: drop-shadow(0px 6px 6px rgba(0, 0, 0, 0.25));\n  }\n`;\n\nexport const MoviesSubtitleStyled = styled.h2`\n  font-size: 16px;\n  margin-top: 10px;\n  color: #333;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport noFoundImage from 'components/Image/image_not_found.jpg';\nimport {\n  MoviesImgStyled,\n  MoviesItemStyled,\n  MoviesListStyled,\n  MoviesSubtitleStyled,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <MoviesListStyled>\n        {movies.map(movie => (\n          <MoviesItemStyled key={movie.id}>\n            <MoviesSubtitleStyled>{movie.title}</MoviesSubtitleStyled>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <MoviesImgStyled\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                    : `${noFoundImage}`\n                }\n                alt={movie.title}\n              />\n            </Link>\n          </MoviesItemStyled>\n        ))}\n      </MoviesListStyled>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const MoviesTitleStyled = styled.h1`\n  font-size: 28px;\n  margin-top: 20px;\n  color: #333;\n  text-align: center;\n`;\n","import React from 'react';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { useHttp } from 'service/useHttp';\nimport { fetchTrendingMovies } from 'service/Api';\nimport { MoviesTitleStyled } from './Home.styled';\n\nconst Home = () => {\n  const [movies] = useHttp(fetchTrendingMovies);\n  return (\n    <>\n      <MoviesTitleStyled>Trending today</MoviesTitleStyled>\n      <MoviesList movies={movies} />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '10f2241cb45b19eefbefaa60e9f9bf26';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      include_adult: false,\n      page: 1,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useHttp = (apiFn, params) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    apiFn(params)\n      .then(res => setData(res))\n      .catch(() => toast.error('Something went wrong!'));\n  }, [apiFn, params]);\n  return [data, setData];\n};\n"],"names":["MoviesListStyled","styled","MoviesItemStyled","MoviesImgStyled","MoviesSubtitleStyled","movies","location","useLocation","map","movie","title","to","id","state","from","src","poster_path","noFoundImage","alt","MoviesTitleStyled","useHttp","fetchTrendingMovies","MoviesList","API_KEY","BASE_URL","axios","params","api_key","response","data","results","fetchSearchMovies","query","include_adult","page","language","fetchMovieCredits","cast","fetchMovieReviews","fetchMovieDetails","apiFn","useState","setData","useEffect","then","res","catch","toast"],"sourceRoot":""}