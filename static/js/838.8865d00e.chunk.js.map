{"version":3,"file":"static/js/838.8865d00e.chunk.js","mappings":"6MAkCA,UA3BqB,WACnB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAuBE,EAAAA,EAAAA,GAAQC,EAAAA,GAAmBH,GAA3CI,GAAP,eAEA,OAA4B,IAAxBA,EAAaC,QACR,uBAAG,+CAIV,0BACE,wBACGD,GACCA,EAAaE,KAAI,SAAAC,GAAM,OACrB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADK,OAShC,C,mMC1BKC,EAAU,mCACVC,EAAQ,+BAEDC,EAAmB,mCAAG,oGACVC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CACjEG,OAAQ,CACNC,QAASL,KAHoB,cAC3BM,EAD2B,yBAM1BA,EAASC,KAAKC,SANY,2CAAH,qDASnBC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAAsC,CAC3DG,OAAQ,CACNC,QAASL,EACTU,MAAOA,EACPC,eAAe,EACfC,KAAM,EACNC,SAAU,WAPiB,cACzBP,EADyB,yBAWxBA,EAASC,KAAKC,SAXU,2CAAH,sDAcjBM,EAAiB,mCAAG,WAAMf,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,YAA6C,CAClEK,OAAQ,CACNC,QAASL,EACTa,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,KAAKQ,MAPU,2CAAH,sDAUjBvB,EAAiB,mCAAG,WAAMO,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,EAA/B,YAA6C,CAClEK,OAAQ,CACNC,QAASL,EACTa,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,sDAUjBQ,EAAiB,mCAAG,WAAMjB,GAAN,uFACRI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BF,GAAM,CAC1DK,OAAQ,CACNC,QAASL,EACTa,SAAU,WAJiB,cACzBP,EADyB,yBAOxBA,EAASC,MAPe,2CAAH,qD,yFC7CjBhB,EAAU,SAAC0B,EAAOb,GAC7B,OAAwBc,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KAMA,OALAC,EAAAA,EAAAA,YAAU,WACRH,EAAMb,GACHiB,MAAK,SAAAC,GAAG,OAAIH,EAAQG,EAAZ,IACRC,OAAM,kBAAMC,EAAAA,GAAAA,MAAY,wBAAlB,GACV,GAAE,CAACP,EAAOb,IACJ,CAACG,EAAMY,EACf,C","sources":["components/MovieReviews/MovieReviews.jsx","service/Api.js","service/useHttp.js"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { fetchMovieReviews } from 'service/Api';\nimport { useHttp } from 'service/useHttp';\n\nconst MovieReviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews] = useHttp(fetchMovieReviews, movieId);\n\n  if (movieReviews.length === 0) {\n    return <p>We don`t have any reviews for this movie.</p>;\n  }\n\n  return (\n    <div>\n      <ul>\n        {movieReviews &&\n          movieReviews.map(review => (\n            <li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nMovieReviews.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default MovieReviews;\n","import axios from 'axios';\n\nconst API_KEY = '10f2241cb45b19eefbefaa60e9f9bf26';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      include_adult: false,\n      page: 1,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useHttp = (apiFn, params) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    apiFn(params)\n      .then(res => setData(res))\n      .catch(() => toast.error('Something went wrong!'));\n  }, [apiFn, params]);\n  return [data, setData];\n};\n"],"names":["movieId","useParams","useHttp","fetchMovieReviews","movieReviews","length","map","review","author","content","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","api_key","response","data","results","fetchSearchMovies","query","include_adult","page","language","fetchMovieCredits","cast","fetchMovieDetails","apiFn","useState","setData","useEffect","then","res","catch","toast"],"sourceRoot":""}