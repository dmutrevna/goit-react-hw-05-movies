{"version":3,"file":"static/js/616.a11def26.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/MoviesSearchFrom/MoviesSearchFrom.styled.jsx","components/MoviesSearchFrom/MoviesSearchFrom.jsx","pages/Movies/Movies.jsx","service/Api.js","service/useHttp.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MoviesListStyled = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 25px;\n  margin-top: 25px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const MoviesItemStyled = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  margin-bottom: 10px;\n  text-align: center;\n  background-color: rgb(189, 243, 251);\n`;\n\nexport const MoviesImgStyled = styled.img`\n  width: 200px;\n  height: 300px;\n  margin-bottom: 20px;\n  transition: transform 0.3s ease-in-out;\n  &:hover {\n    transform: translateY(-2px) scale(1.07);\n    filter: drop-shadow(0px 6px 6px rgba(0, 0, 0, 0.25));\n  }\n`;\n\nexport const MoviesSubtitleStyled = styled.h2`\n  font-size: 16px;\n  margin-top: 10px;\n  color: #333;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport noFoundImage from 'components/Image/image_not_found.jpg';\nimport {\n  MoviesImgStyled,\n  MoviesItemStyled,\n  MoviesListStyled,\n  MoviesSubtitleStyled,\n} from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <MoviesListStyled>\n        {movies.map(movie => (\n          <MoviesItemStyled key={movie.id}>\n            <MoviesSubtitleStyled>{movie.title}</MoviesSubtitleStyled>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <MoviesImgStyled\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                    : `${noFoundImage}`\n                }\n                alt={movie.title}\n              />\n            </Link>\n          </MoviesItemStyled>\n        ))}\n      </MoviesListStyled>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  gap: 10px;\n  width: 400px;\n  margin: 0 auto;\n  padding-top: 20px;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  flex-grow: 1;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 10px 20px;\n  background-color: gray;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: rgb(225 217 217);\n    color: black;\n  }\n`;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  SearchButton,\n  SearchForm,\n  SearchInput,\n} from './MoviesSearchFrom.styled';\n\nconst MoviesSearchFrom = ({ handleSubmit }) => {\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    handleSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleFormSubmit}>\n      <SearchInput type=\"text\" value={value} onChange={handleChange} />\n      <SearchButton type=\"submit\">Search</SearchButton>\n    </SearchForm>\n  );\n};\n\nMoviesSearchFrom.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n};\n\nexport default MoviesSearchFrom;\n","import React, { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchSearchMovies } from 'service/Api';\nimport { useHttp } from 'service/useHttp';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport MoviesSearchFrom from 'components/MoviesSearchFrom/MoviesSearchFrom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies] = useHttp(fetchSearchMovies, query);\n  const [isSearchExecuted, setIsSearchExecuted] = useState(false);\n\n  const handleSubmit = query => {\n    setSearchParams({ query });\n    setIsSearchExecuted(true);\n  };\n\n  return (\n    <>\n      <MoviesSearchFrom handleSubmit={handleSubmit} />\n      {isSearchExecuted && movies.length === 0 ? (\n        <p>No movies found for the current search query.</p>\n      ) : (\n        <MoviesList movies={movies} />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '10f2241cb45b19eefbefaa60e9f9bf26';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      include_adult: false,\n      page: 1,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useHttp = (apiFn, params) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    apiFn(params)\n      .then(res => setData(res))\n      .catch(() => toast.error('Something went wrong!'));\n  }, [apiFn, params]);\n  return [data, setData];\n};\n"],"names":["MoviesListStyled","styled","MoviesItemStyled","MoviesImgStyled","MoviesSubtitleStyled","movies","location","useLocation","map","movie","title","to","id","state","from","src","poster_path","noFoundImage","alt","SearchForm","SearchInput","SearchButton","handleSubmit","useState","value","setValue","onSubmit","e","preventDefault","type","onChange","target","useSearchParams","searchParams","setSearchParams","query","get","useHttp","fetchSearchMovies","isSearchExecuted","setIsSearchExecuted","length","MoviesList","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","api_key","response","data","results","include_adult","page","language","fetchMovieCredits","cast","fetchMovieReviews","fetchMovieDetails","apiFn","setData","useEffect","then","res","catch","toast"],"sourceRoot":""}