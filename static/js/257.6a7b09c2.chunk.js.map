{"version":3,"file":"static/js/257.6a7b09c2.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","service/Api.js","service/useHttp.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled.div`\n  padding: 20px;\n  background-color: rgb(189, 243, 251);\n  max-width: 1200px;\n  margin: 0 auto;\n\n  button {\n    padding: 10px 20px;\n    background-color: gray;\n    color: white;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n\n    &:hover {\n      background-color: rgb(225 217 217);\n      color: black;\n    }\n  }\n`;\n\nexport const MovieDescriptionContainer = styled.div`\n  display: flex;\n`;\n\nexport const MovieImageStyled = styled.img`\n  padding: 20px;\n`;\n\nexport const MovieDescriptionStyled = styled.div`\n  justify-content: flex-start;\n`;\n\nexport const MovieListCast = styled.li`\n  margin-bottom: 10px;\n  a {\n    color: black;\n    font-size: 16px;\n\n    &:hover {\n      color: gray;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport { fetchMovieDetails } from 'service/Api';\nimport { useHttp } from 'service/useHttp';\nimport noFoundImage from 'components/Image/image_not_found.jpg';\nimport {\n  MovieDescriptionContainer,\n  MovieDescriptionStyled,\n  MovieDetailsContainer,\n  MovieImageStyled,\n  MovieListCast,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails] = useHttp(fetchMovieDetails, movieId);\n  const location = useLocation();\n\n  if (movieDetails?.length === 0) return null;\n\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movieDetails;\n\n  const userScore = Math.round(Number(vote_average) * 10);\n\n  return (\n    <>\n      <MovieDetailsContainer>\n        <Link to={location.state?.from || '/'}>\n          <button> &#8592; Go back</button>\n        </Link>\n        <MovieDescriptionContainer>\n          <MovieImageStyled\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : `${noFoundImage}`\n            }\n            alt={title}\n            width=\"200\"\n          />\n          <MovieDescriptionStyled>\n            <h2>\n              {title} ({new Date(release_date).getFullYear()})\n            </h2>\n            <p>User score: {userScore}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h3>Genres</h3>\n            <ul>\n              {genres &&\n                genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n            </ul>\n          </MovieDescriptionStyled>\n        </MovieDescriptionContainer>\n\n        <hr />\n        <div>\n          <h4>Additional information</h4>\n          <ul>\n            <MovieListCast>\n              <Link to=\"cast\">Cast</Link>\n            </MovieListCast>\n            <MovieListCast>\n              <Link to=\"reviews\">Reviews</Link>\n            </MovieListCast>\n          </ul>\n        </div>\n        <Outlet />\n      </MovieDetailsContainer>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '10f2241cb45b19eefbefaa60e9f9bf26';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: API_KEY,\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      query: query,\n      include_adult: false,\n      page: 1,\n      language: 'en-US',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchMovieCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n","import { useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\n\nexport const useHttp = (apiFn, params) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    apiFn(params)\n      .then(res => setData(res))\n      .catch(() => toast.error('Something went wrong!'));\n  }, [apiFn, params]);\n  return [data, setData];\n};\n"],"names":["MovieDetailsContainer","styled","MovieDescriptionContainer","MovieImageStyled","MovieDescriptionStyled","MovieListCast","movieId","useParams","useHttp","fetchMovieDetails","movieDetails","location","useLocation","length","poster_path","title","release_date","vote_average","overview","genres","userScore","Math","round","Number","to","state","from","src","noFoundImage","alt","width","Date","getFullYear","map","genre","name","id","API_KEY","BASE_URL","fetchTrendingMovies","axios","params","api_key","response","data","results","fetchSearchMovies","query","include_adult","page","language","fetchMovieCredits","cast","fetchMovieReviews","apiFn","useState","setData","useEffect","then","res","catch","toast"],"sourceRoot":""}